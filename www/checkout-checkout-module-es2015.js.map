{"version":3,"sources":["./src/app/checkout/checkout.page.html","./src/app/checkout/checkout.module.ts","./src/app/checkout/checkout.page.scss","./src/app/checkout/checkout.page.ts"],"names":[],"mappings":"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","file":"checkout-checkout-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n      <img src=\\\"assets/img/dg.png\\\" class=\\\"logo\\\"> <!--Places the DG Asian Food Company Logo at the top of page. Sized and centered using logo tag in CSS-->\\n      <ion-title>Checkout</ion-title> <!--Page Title-->\\n  </ion-toolbar>\\n</ion-header>\\n<ion-buttons slot=\\\"start\\\">\\n  <ion-back-button color=\\\"danger\\\" defaultHref=\\\"/products\\\"></ion-back-button> <!--Red back button takes user back to products when clicked -->\\n</ion-buttons>\\n\\n<ion-content> <!--Starts content tag-->\\n\\n  <ion-list>\\n      <ion-item *ngFor=\\\"let item of selectedProducts\\\" lines=\\\"inset\\\"> <!--ngFor directive subscribes to selected products as item in cart-->\\n          {{ item.count }} x {{ item.name }} - {{ item.price | currency: 'GBP' : 'symbol' }} <!--passes amount (count) of products added to cart calculated in the CheckoutPage.ts file, -->\\n                                                                                              <!--product name and product price in £ currency-->\\n          <ion-label slot=\\\"end\\\" text-right>{{ (item.price * item.count) | currency: 'GBP' : 'symbol' }}</ion-label> <!--passes product price multiplied by count. Uses the £ currency pipe-->\\n      </ion-item>\\n      <ion-item>\\n          Order Total: <span slot=\\\"end\\\">{{ total | currency: 'GBP' : 'symbol' }}</span> <!--passes cart total in £ currency to the checkout page-->\\n      </ion-item>\\n  </ion-list>\\n\\n  <ion-button expand=\\\"block\\\" (click)=\\\"refreshPage();\\\"> <!--Pay Now button refreshPage method initilaised on click-->\\n    Pay Now\\n  </ion-button>\\n\\n</ion-content> <!--Ends content tag-->\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CheckoutPage } from './checkout.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CheckoutPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CheckoutPage]\n})\nexport class CheckoutPageModule {}\n","module.exports = \".logo {\\n  height: 175px;\\n  width: 175px;\\n  position: relative;\\n}\\n\\nion-toolbar {\\n  text-align: center;\\n}\\n\\nion-card {\\n  position: relative;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hlY2tvdXQvQzpcXFVzZXJzXFxUQVBFRklWRVxcRGVza3RvcFxcSW9uaWMgUHJvamVjdHNcXG5ld0FwcC9zcmNcXGFwcFxcY2hlY2tvdXRcXGNoZWNrb3V0LnBhZ2Uuc2NzcyIsInNyYy9hcHAvY2hlY2tvdXQvY2hlY2tvdXQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtBQ0NKOztBREdBO0VBQ0ksa0JBQUE7QUNBSjs7QURJQTtFQUNJLGtCQUFBO0VBQ0Esa0JBQUE7QUNESiIsImZpbGUiOiJzcmMvYXBwL2NoZWNrb3V0L2NoZWNrb3V0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dvIHtcclxuICAgIGhlaWdodDogMTc1cHg7XHJcbiAgICB3aWR0aDogMTc1cHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn0gLy8gc2V0cyBsb2dvIHNpemUgYW5kIHBvc2l0aW9uIG9uIHNjcmVlblxyXG5cclxuXHJcbmlvbi10b29sYmFyIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufSAvLyBjZW50ZXJzIHRvb2xiYXIgb24gc2NyZWVuXHJcblxyXG5cclxuaW9uLWNhcmQge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59IC8vY2VudGVycyBjaGVja291dCBjYXJkIG9uIHNjcmVlblxyXG4iLCIubG9nbyB7XG4gIGhlaWdodDogMTc1cHg7XG4gIHdpZHRoOiAxNzVweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG5pb24tdG9vbGJhciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuaW9uLWNhcmQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core'; //imports Component and OnInit method\nimport { AlertController } from '@ionic/angular'; ////imports AlertController\nimport { Router } from '@angular/router'; //imports Router\nimport { CartService } from 'src/app/services/cart.service' //imports cartService service\nimport { AuthenticateService } from '../services/authentication.service'; //imports AuthenticateService service\n\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.page.html',\n  styleUrls: ['./checkout.page.scss'],\n})\nexport class CheckoutPage implements OnInit {\n\n  selectedProducts = []; //selectedProducts variable declared\n\n  total = 0; //total variable declared\n\n\n  constructor(private router: Router, private cartService: CartService, private alertController: AlertController, private authService: AuthenticateService) { }\n  \n  //CartService, Router and AlertController imports declared in constructor class\n\n  \n\n  ngOnInit() {\n\n\n      let products = this.cartService.getCart(); //ngOnInit method declares and initialises the getCart method from CartService\n      let selected = {};\n      for (let obj of products) {\n          if (selected[obj.id]) {\n              selected[obj.id].count++;\n          } else {\n              selected[obj.id] = { ...obj, count: 1 };\n          }\n      }\n      this.selectedProducts = Object.keys(selected).map(key => selected[key]);\n      this.total = this.selectedProducts.reduce((a, b) => a + (b.count * b.price), 0);\n  }\n      //iterates the selected products count multiplied by the product price from the cart to display the total amount of items based on product id, name and price\n\n\nasync refreshPage(){\n\n  const alert = await this.alertController.create({\n    header: 'Your order is on its way!',\n    subHeader: 'Thank you for shopping with Dumfries & Galloway Asian Food Company.',\n    \n    buttons: [ {\n\n      text: 'Ok',\n      handler: () => {\n\n        window.location.replace('products');\n      }\n    },\n\n  ]\n}); await alert.present();\n\n//refreshPage method declared and initialised when pay now button clicked\n//Presents alert message to user and when OK is clicked app is refreshed to remove all items from cart. User passed back to products page\n\n\n}\n\n\n\n}\n\n\n  \n\n"],"sourceRoot":""}