{"version":3,"sources":["./src/app/products/products.page.html","./src/app/products/products.module.ts","./src/app/products/products.page.scss","./src/app/products/products.page.ts"],"names":[],"mappings":"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","file":"products-products-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar>\\n    <img src=\\\"assets/img/dg.png\\\" class=\\\"logo\\\"> <!--Places the DG Asian Food Company Logo at the top of page. Sized and centered using logo tag in CSS-->\\n    <ion-title>Products</ion-title> <!--Page Title-->\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-buttons slot=\\\"start\\\">\\n  <ion-back-button color=\\\"danger\\\" text= \\\"Home\\\" defaultHref=\\\"/home\\\"></ion-back-button>\\n</ion-buttons> <!--Red back button takes user back to home when clicked -->\\n\\n<ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button *ngIf=\\\"cart.length > 0\\\" (click)=\\\"openCart()\\\"><!--openCart method declared-->\\n      <ion-badge>{{ cart.length }}</ion-badge>\\n      <ion-icon name=\\\"cart\\\" size=\\\"large\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab> <!--Cart icon and button placed in top left of screen. Number of items in cart only displayed if cart total is greater than 1-->\\n            <!-- When cart icon clicked, user passed to cart model-->\\n\\n\\n\\n<ion-content>\\n<!--ngContainer opened for first product card-->\\n  <ng-container *ngFor=\\\"let p of products | async\\\"> <!--ngFor directive and async pipe subscribes to products observable-->\\n      <ion-card *ngIf=\\\"p.id == 1\\\"> <!--ngIf directive card only displays product information when relevant product id is declared-->\\n          <ion-card-header>\\n              <img src=\\\"assets/img/wrappers.jpg\\\" class=\\\"image\\\"> <!--image path sets different product image for each product id-->\\n              <ion-card-title>{{p.name}}</ion-card-title> <!--passes product name to the cart title from Firestore-->\\n              <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle><!--passes product price to the cart subtitle from Firestore-->\\n              <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\"><!--addToCart method initialised on click and product with id 1 added to cart-->\\n                  <ion-icon name=\\\"add\\\"></ion-icon> <!--displays add icon-->\\n              </ion-button>\\n          </ion-card-header>\\n      </ion-card><!--closes product card-->\\n  </ng-container><!--closes ngContainer-->\\n\\n  <ng-container *ngFor=\\\"let p of products | async\\\"> <!--Code exactly the same for other 19 products' functionality and appearance, all that is different is the product id and image path -->\\n      <ion-card *ngIf=\\\"p.id == 2\\\">\\n          <ion-card-header>\\n              <img src=\\\"assets/img/duck.jpg\\\" class=\\\"image\\\">\\n              <ion-card-title>{{p.name}}</ion-card-title>\\n              <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle>\\n              <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\">\\n                  <ion-icon name=\\\"add\\\"></ion-icon>\\n              </ion-button>\\n          </ion-card-header>\\n      </ion-card>\\n  </ng-container>\\n\\n  <ng-container *ngFor=\\\"let p of products | async\\\">\\n      <ion-card *ngIf=\\\"p.id == 3\\\">\\n          <ion-card-header>\\n              <img src=\\\"assets/img/dimsum.jpg\\\" class=\\\"image\\\">\\n              <ion-card-title>{{p.name}}</ion-card-title>\\n              <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle>\\n              <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\">\\n                  <ion-icon name=\\\"add\\\"></ion-icon>\\n              </ion-button>\\n          </ion-card-header>\\n      </ion-card>\\n  </ng-container>\\n\\n  <ng-container *ngFor=\\\"let p of products | async\\\">\\n      <ion-card *ngIf=\\\"p.id == 4\\\">\\n          <ion-card-header>\\n              <img src=\\\"assets/img/prawn.jpg\\\" class=\\\"image\\\">\\n              <ion-card-title>{{p.name}}</ion-card-title>\\n              <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle>\\n              <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\">\\n                  <ion-icon name=\\\"add\\\"></ion-icon>\\n              </ion-button>\\n          </ion-card-header>\\n      </ion-card>\\n  </ng-container>\\n\\n  <ng-container *ngFor=\\\"let p of products | async\\\">\\n      <ion-card *ngIf=\\\"p.id == 5\\\">\\n          <ion-card-header>\\n              <img src=\\\"assets/img/mandu.jpg\\\" class=\\\"image\\\">\\n              <ion-card-title>{{p.name}}</ion-card-title>\\n              <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle>\\n              <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\">\\n                  <ion-icon name=\\\"add\\\"></ion-icon>\\n              </ion-button>\\n          </ion-card-header>\\n      </ion-card>\\n  </ng-container>\\n\\n  <ng-container *ngFor=\\\"let p of products | async\\\">\\n      <ion-card *ngIf=\\\"p.id == 6\\\">\\n          <ion-card-header>\\n              <img src=\\\"assets/img/coriander.jpg\\\" class=\\\"image\\\">\\n              <ion-card-title>{{p.name}}</ion-card-title>\\n              <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle>\\n              <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\">\\n                  <ion-icon name=\\\"add\\\"></ion-icon>\\n              </ion-button>\\n          </ion-card-header>\\n      </ion-card>\\n  </ng-container>\\n\\n  <ng-container *ngFor=\\\"let p of products | async\\\">\\n      <ion-card *ngIf=\\\"p.id == 7\\\">\\n          <ion-card-header>\\n              <img src=\\\"assets/img/dill.jpg\\\" class=\\\"image\\\">\\n              <ion-card-title>{{p.name}}</ion-card-title>\\n              <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle>\\n              <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\">\\n                  <ion-icon name=\\\"add\\\"></ion-icon>\\n              </ion-button>\\n          </ion-card-header>\\n      </ion-card>\\n  </ng-container>\\n\\n  <ng-container *ngFor=\\\"let p of products | async\\\">\\n      <ion-card *ngIf=\\\"p.id == 8\\\">\\n          <ion-card-header>\\n              <img src=\\\"assets/img/chive.jpg\\\" class=\\\"image\\\">\\n              <ion-card-title>{{p.name}}</ion-card-title>\\n              <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle>\\n              <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\">\\n                  <ion-icon name=\\\"add\\\"></ion-icon>\\n              </ion-button>\\n          </ion-card-header>\\n      </ion-card>\\n  </ng-container>\\n\\n  <ng-container *ngFor=\\\"let p of products | async\\\">\\n    <ion-card *ngIf=\\\"p.id == 9\\\">\\n        <ion-card-header>\\n            <img src=\\\"assets/img/hp.jpg\\\" class=\\\"image\\\">\\n            <ion-card-title>{{p.name}}</ion-card-title>\\n            <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle>\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\">\\n                <ion-icon name=\\\"add\\\"></ion-icon>\\n            </ion-button>\\n        </ion-card-header>\\n    </ion-card>\\n</ng-container>\\n\\n<ng-container *ngFor=\\\"let p of products | async\\\">\\n    <ion-card *ngIf=\\\"p.id == 10\\\">\\n        <ion-card-header>\\n            <img src=\\\"assets/img/teans.jpg\\\" class=\\\"image\\\">\\n            <ion-card-title>{{p.name}}</ion-card-title>\\n            <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle>\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\">\\n                <ion-icon name=\\\"add\\\"></ion-icon>\\n            </ion-button>\\n        </ion-card-header>\\n    </ion-card>\\n</ng-container>\\n\\n<ng-container *ngFor=\\\"let p of products | async\\\">\\n    <ion-card *ngIf=\\\"p.id == 11\\\">\\n        <ion-card-header>\\n            <img src=\\\"assets/img/mpg.jpg\\\" class=\\\"image\\\">\\n            <ion-card-title>{{p.name}}</ion-card-title>\\n            <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle>\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\">\\n                <ion-icon name=\\\"add\\\"></ion-icon>\\n            </ion-button>\\n        </ion-card-header>\\n    </ion-card>\\n</ng-container>\\n\\n<ng-container *ngFor=\\\"let p of products | async\\\">\\n    <ion-card *ngIf=\\\"p.id == 12\\\">\\n        <ion-card-header>\\n            <img src=\\\"assets/img/mpr.jpg\\\" class=\\\"image\\\">\\n            <ion-card-title>{{p.name}}</ion-card-title>\\n            <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle>\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\">\\n                <ion-icon name=\\\"add\\\"></ion-icon>\\n            </ion-button>\\n        </ion-card-header>\\n    </ion-card>\\n</ng-container>\\n\\n<ng-container *ngFor=\\\"let p of products | async\\\">\\n    <ion-card *ngIf=\\\"p.id == 13\\\">\\n        <ion-card-header>\\n            <img src=\\\"assets/img/tcp.jpg\\\" class=\\\"image\\\">\\n            <ion-card-title>{{p.name}}</ion-card-title>\\n            <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle>\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\">\\n                <ion-icon name=\\\"add\\\"></ion-icon>\\n            </ion-button>\\n        </ion-card-header>\\n    </ion-card>\\n</ng-container>\\n\\n<ng-container *ngFor=\\\"let p of products | async\\\">\\n  <ion-card *ngIf=\\\"p.id == 14\\\">\\n      <ion-card-header>\\n          <img src=\\\"assets/img/sri.jpg\\\" class=\\\"image\\\">\\n          <ion-card-title>{{p.name}}</ion-card-title>\\n          <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle>\\n          <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\">\\n              <ion-icon name=\\\"add\\\"></ion-icon>\\n          </ion-button>\\n      </ion-card-header>\\n  </ion-card>\\n</ng-container>\\n\\n<ng-container *ngFor=\\\"let p of products | async\\\">\\n  <ion-card *ngIf=\\\"p.id == 15\\\">\\n      <ion-card-header>\\n          <img src=\\\"assets/img/hoi.jpg\\\" class=\\\"image\\\">\\n          <ion-card-title>{{p.name}}</ion-card-title>\\n          <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle>\\n          <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\">\\n              <ion-icon name=\\\"add\\\"></ion-icon>\\n          </ion-button>\\n      </ion-card-header>\\n  </ion-card>\\n</ng-container>\\n\\n<ng-container *ngFor=\\\"let p of products | async\\\">\\n  <ion-card *ngIf=\\\"p.id == 16\\\">\\n      <ion-card-header>\\n          <img src=\\\"assets/img/jimmy.jpg\\\" class=\\\"image\\\">\\n          <ion-card-title>{{p.name}}</ion-card-title>\\n          <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle>\\n          <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\">\\n              <ion-icon name=\\\"add\\\"></ion-icon>\\n          </ion-button>\\n      </ion-card-header>\\n  </ion-card>\\n</ng-container>\\n\\n<ng-container *ngFor=\\\"let p of products | async\\\">\\n  <ion-card *ngIf=\\\"p.id == 17\\\">\\n      <ion-card-header>\\n          <img src=\\\"assets/img/plum.jpg\\\" class=\\\"image\\\">\\n          <ion-card-title>{{p.name}}</ion-card-title>\\n          <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle>\\n          <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\">\\n              <ion-icon name=\\\"add\\\"></ion-icon>\\n          </ion-button>\\n      </ion-card-header>\\n  </ion-card>\\n</ng-container>\\n\\n<ng-container *ngFor=\\\"let p of products | async\\\">\\n  <ion-card *ngIf=\\\"p.id == 18\\\">\\n      <ion-card-header>\\n          <img src=\\\"assets/img/coco.jpg\\\" class=\\\"image\\\">\\n          <ion-card-title>{{p.name}}</ion-card-title>\\n          <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle>\\n          <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\">\\n              <ion-icon name=\\\"add\\\"></ion-icon>\\n          </ion-button>\\n      </ion-card-header>\\n  </ion-card>\\n</ng-container>\\n\\n<ng-container *ngFor=\\\"let p of products | async\\\">\\n  <ion-card *ngIf=\\\"p.id == 19\\\">\\n      <ion-card-header>\\n          <img src=\\\"assets/img/thai.jpg\\\" class=\\\"image\\\">\\n          <ion-card-title>{{p.name}}</ion-card-title>\\n          <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle>\\n          <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\">\\n              <ion-icon name=\\\"add\\\"></ion-icon>\\n          </ion-button>\\n      </ion-card-header>\\n  </ion-card>\\n</ng-container>\\n\\n<ng-container *ngFor=\\\"let p of products | async\\\">\\n  <ion-card *ngIf=\\\"p.id == 20\\\">\\n      <ion-card-header>\\n          <img src=\\\"assets/img/soy.jpg\\\" class=\\\"image\\\">\\n          <ion-card-title>{{p.name}}</ion-card-title>\\n          <ion-card-subtitle>Price: £{{p.price}}</ion-card-subtitle>\\n          <ion-button fill=\\\"clear\\\" (click)=\\\"addToCart(p)\\\">\\n              <ion-icon name=\\\"add\\\"></ion-icon>\\n          </ion-button>\\n      </ion-card-header>\\n  </ion-card>\\n</ng-container>\\n\\n\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProductsPage } from './products.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProductsPage]\n})\nexport class ProductsPageModule {}\n","module.exports = \".logo {\\n  height: 175px;\\n  width: 175px;\\n  position: relative;\\n}\\n\\nion-toolbar {\\n  text-align: center;\\n}\\n\\nion-card {\\n  position: relative;\\n  text-align: center;\\n}\\n\\n.image {\\n  height: 175px;\\n  width: 175px;\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\nion-fab-button {\\n  height: 70px;\\n  width: 70px;\\n}\\n\\n.cart-icon {\\n  font-size: 50px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZHVjdHMvQzpcXFVzZXJzXFxUQVBFRklWRVxcRGVza3RvcFxcSW9uaWMgUHJvamVjdHNcXG5ld0FwcC9zcmNcXGFwcFxccHJvZHVjdHNcXHByb2R1Y3RzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcHJvZHVjdHMvcHJvZHVjdHMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7QUNDSjs7QURFQTtFQUNJLGtCQUFBO0VBQ0Esa0JBQUE7QUNDSjs7QURFQTtFQUVJLGFBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7QUNBSjs7QURJQTtFQUNJLFlBQUE7RUFDQSxXQUFBO0FDREo7O0FES0E7RUFDSSxlQUFBO0FDRkoiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0cy9wcm9kdWN0cy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9nbyB7XHJcbiAgICBoZWlnaHQ6IDE3NXB4O1xyXG4gICAgd2lkdGg6IDE3NXB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59IC8vIHNldHMgbG9nbyBzaXplIGFuZCBwb3NpdGlvbiBvbiBzY3JlZW5cclxuXHJcbmlvbi10b29sYmFyIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufSAvLyBjZW50ZXJzIHRvb2xiYXIgb24gc2NyZWVuXHJcblxyXG5pb24tY2FyZCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn0gLy8gY2VudGVycyBjYXJkcyBmb3IgYnV0dG9ucyBvbiBzY3JlZW5cclxuXHJcbi5pbWFnZSB7XHJcblxyXG4gICAgaGVpZ2h0OiAxNzVweDtcclxuICAgIHdpZHRoOiAxNzVweDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcblxyXG59IC8vIHNldHMgcHJvZHVjdCBpbWFnZSBzaXplIGFuZCBzZXRzIHBvc2l0aW9uIGFzIGNlbnRlcmVkXHJcblxyXG5pb24tZmFiLWJ1dHRvbiB7XHJcbiAgICBoZWlnaHQ6IDcwcHg7XHJcbiAgICB3aWR0aDogNzBweDtcclxufSAvLyBzZXRzIHNpemUgb2YgY2FydCBidXR0b25cclxuXHJcblxyXG4uY2FydC1pY29uIHtcclxuICAgIGZvbnQtc2l6ZTogNTBweDtcclxufSAvL3NldHMgc2l6ZSBvZiBmb250IHdpdGhpbiBjYXJ0IiwiLmxvZ28ge1xuICBoZWlnaHQ6IDE3NXB4O1xuICB3aWR0aDogMTc1cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuaW9uLXRvb2xiYXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbmlvbi1jYXJkIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5pbWFnZSB7XG4gIGhlaWdodDogMTc1cHg7XG4gIHdpZHRoOiAxNzVweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG5cbmlvbi1mYWItYnV0dG9uIHtcbiAgaGVpZ2h0OiA3MHB4O1xuICB3aWR0aDogNzBweDtcbn1cblxuLmNhcnQtaWNvbiB7XG4gIGZvbnQtc2l6ZTogNTBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core'; //imports Component and OnInit method\nimport { CartService } from 'src/app/services/cart.service'; //imports cartService service\nimport { AngularFirestore } from '@angular/fire/firestore'; //imports Firestore database from Firebase\nimport { Observable } from 'rxjs'; //imports Observable\nimport { Router } from '@angular/router'; //imports Router\nimport { ModalController } from '@ionic/angular'; //imports ModalController\nimport { CartPage } from 'src/app/cart/cart.page'; //imports CartPage class\n\n\n\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.page.html',\n  styleUrls: ['./products.page.scss'],\n})\nexport class ProductsPage implements OnInit {\n\n\n  cart = []; //cart variable declared\n\n  private products: Observable<any[]>; //products observable declared\n\n  constructor(private firestore: AngularFirestore, private cartService: CartService, private router: Router, private modalCtrl: ModalController,) \n\n  //Firestore, CartService, Router and ModalController imports declared in constructor class\n  \n  {\n\n    this.products = this.firestore.collection<any>('products').valueChanges(); //valueChanges method returns latest values from products collection from within the Firestore database\n    }\n\n\n    ngOnInit() {\n        this.products = this.cartService.getProducts();\n        this.cart = this.cartService.getCart();\n    } //ngOnInit method declares getProducts and getCart methods and initialised from within the CartService\n\n    addToCart(product) {\n        this.cartService.addProduct(product);\n    } //addToCart method declared and initialised from the addProduct method from within the CartService\n\n    async openCart() {\n        let modal = await this.modalCtrl.create({\n          component: CartPage,\n          cssClass: 'cart-modal'\n        });\n        modal.present();\n    } //openCart method declared and initialises cart modal from cart page when cart icon clicked\n\n    remove(product) {\n        this.cartService.removeItemFromCart(product);\n    } //remove method declared and initialised from the removeItemFromCart method from within the CartService\n\n\n\n}\n\n"],"sourceRoot":""}